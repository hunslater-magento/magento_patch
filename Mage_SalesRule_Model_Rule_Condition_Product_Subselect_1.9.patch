Index: htdocs/app/code/core/Mage/SalesRule/Model/Rule/Condition/Product/Subselect.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n/**\n * Magento\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Open Software License (OSL 3.0)\n * that is bundled with this package in the file LICENSE.txt.\n * It is also available through the world-wide-web at this URL:\n * http://opensource.org/licenses/osl-3.0.php\n * If you did not receive a copy of the license and are unable to\n * obtain it through the world-wide-web, please send an email\n * to license@magento.com so we can send you a copy immediately.\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade Magento to newer\n * versions in the future. If you wish to customize Magento for your\n * needs please refer to http://www.magento.com for more information.\n *\n * @category    Mage\n * @package     Mage_SalesRule\n * @copyright  Copyright (c) 2006-2015 X.commerce, Inc. (http://www.magento.com)\n * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)\n */\n\n\nclass Mage_SalesRule_Model_Rule_Condition_Product_Subselect\n    extends Mage_SalesRule_Model_Rule_Condition_Product_Combine\n{\n    public function __construct()\n    {\n        parent::__construct();\n        $this->setType('salesrule/rule_condition_product_subselect')\n            ->setValue(null);\n    }\n\n    public function loadArray($arr, $key='conditions')\n    {\n        $this->setAttribute($arr['attribute']);\n        $this->setOperator($arr['operator']);\n        parent::loadArray($arr, $key);\n        return $this;\n    }\n\n    public function asXml($containerKey='conditions', $itemKey='condition')\n    {\n        $xml = '<attribute>'.$this->getAttribute().'</attribute>'\n            . '<operator>'.$this->getOperator().'</operator>'\n            . parent::asXml($containerKey, $itemKey);\n        return $xml;\n    }\n\n    public function loadAttributeOptions()\n    {\n        $this->setAttributeOption(array(\n            'qty'  => Mage::helper('salesrule')->__('total quantity'),\n            'base_row_total'  => Mage::helper('salesrule')->__('total amount'),\n        ));\n        return $this;\n    }\n\n    public function loadValueOptions()\n    {\n        return $this;\n    }\n\n    public function loadOperatorOptions()\n    {\n        $this->setOperatorOption(array(\n            '=='  => Mage::helper('rule')->__('is'),\n            '!='  => Mage::helper('rule')->__('is not'),\n            '>='  => Mage::helper('rule')->__('equals or greater than'),\n            '<='  => Mage::helper('rule')->__('equals or less than'),\n            '>'   => Mage::helper('rule')->__('greater than'),\n            '<'   => Mage::helper('rule')->__('less than'),\n            '()'  => Mage::helper('rule')->__('is one of'),\n            '!()' => Mage::helper('rule')->__('is not one of'),\n        ));\n        return $this;\n    }\n\n    public function getValueElementType()\n    {\n        return 'text';\n    }\n\n    public function asHtml()\n    {\n        $html = $this->getTypeElement()->getHtml().\n        Mage::helper('salesrule')->__(\"If %s %s %s for a subselection of items in cart matching %s of these conditions:\", $this->getAttributeElement()->getHtml(), $this->getOperatorElement()->getHtml(), $this->getValueElement()->getHtml(), $this->getAggregatorElement()->getHtml());\n        if ($this->getId() != '1') {\n            $html .= $this->getRemoveLinkHtml();\n        }\n        return $html;\n    }\n\n    /**\n     * validate\n     *\n     * @param Varien_Object $object Quote\n     * @return boolean\n     */\n    public function validate(Varien_Object $object)\n    {\n        if (!$this->getConditions()) {\n            return false;\n        }\n\n//        $value = $this->getValue();\n//        $aggregatorArr = explode('/', $this->getAggregator());\n//        $this->setValue((int)$aggregatorArr[0])->setAggregator($aggregatorArr[1]);\n\n        $attr = $this->getAttribute();\n        $total = 0;\n        foreach ($object->getQuote()->getAllVisibleItems() as $item) {\n            if (parent::validate($item)) {\n                $total += $item->getData($attr);\n            }\n        }\n//        $this->setAggregator(join('/', $aggregatorArr))->setValue($value);\n\n        return $this->validateAttribute($total);\n    }\n}\n
===================================================================
--- htdocs/app/code/core/Mage/SalesRule/Model/Rule/Condition/Product/Subselect.php	(revision )
+++ htdocs/app/code/core/Mage/SalesRule/Model/Rule/Condition/Product/Subselect.php	(date 1444233450000)
@@ -114,7 +114,7 @@
         $attr = $this->getAttribute();
         $total = 0;
         foreach ($object->getQuote()->getAllVisibleItems() as $item) {
+            if (parent::validate($item)) {
-            if (Mage_Rule_Model_Condition_Combine::validate($item)) {
                 $total += $item->getData($attr);
             }
         }
